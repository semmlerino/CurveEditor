##
##
##	3DEqualizer4 Release 8.0
##	Python Interface Command Summary
##
##	(c) Science.D.Visions GmbH
##
##



##########################
# 3DE4 scripting tags...


# 3DE4.script.name: 			<GUI menu label>

# 3DE4.script.addlabel: 		<additional GUI menu label>

# 3DE4.script.version:			<GUI version string>

# 3DE4.script.gui:			<GUI menu path>

# 3DE4.script.gui.button:		<GUI display area button label>, align-bottom/top-left/right, <button width>, <button height>
# 3DE4.script.gui.button:		<GUI display area button label>, offset-bottom/top-center/left/right <offset x> <offset y>, <button width>, <button height>

# 3DE4.script.comment:			<GUI "more infos" comment string>

# 3DE4.script.hide: 			true/false

# 3DE4.script.startup: 			true/false

# 3DE4.script.gui.config_menus:		true/false

# 3DE4.script.gui.attribute_editor:	<pre-defined or custom tab label>



##################
# definitions...

<vector 2d>			= [<double>,<double>]
<vector 3d>			= [<double>,<double>,<double>]
<matrix 3d>			= [ [<double>,<double>,<double>],[<double>,<double>,<double>],[<double>,<double>,<double>] ]
<tracking curve>		= [<vector 2d>,<vector2d>...]
<survey mode>			= "SURVEY_FREE"|"SURVEY_APPROX"|"SURVEY_EXACT"|"SURVEY_LINEUP"
<calc mode>			= "CALC_OFF"|"CALC_PASSIVE"|"CALC_ACTIVE"
<curve mode>			= "ROTPOS_CURVES"|"ZOOM_CURVES"|"STEREO_CURVES"|"DISTORTION_CURVES"
<tracking_mode>			= "TRACKING_PATTERN"|"TRACKING_MARKER"|"TRACKING_CORNER"
<tracking_direction>		= "TRACKING_FW"|"TRACKING_BW"|"TRACKING_FW_BW"
<para_type>			= "LDP_STRING"|"LDP_DOUBLE"|"LDP_INT"|"LDP_FILE"|"LDP_TOGGLE"|"LDP_DOUBLE_ADJUST"
<postfilter_mode>		= "POSTFILTER_OFF"|"POSTFILTER_SMOOTHING"|"POSTFILTER_SMOOTHING_FOURIER"|"POSTFILTER_BUTTERWORTH"
<stereo_mode>			= "STEREO_OFF"|"STEREO_PRIMARY"|"STEREO_SECONDARY"
<stereo_orientation>		= "STEREO_LEFT"|"STEREO_RIGHT"
<blur_mode>			= "BLUR_NONE"|"BLUR_3X3"|"BLUR_5X5"
<point_status>			= "POINT_KEYFRAME"|"POINT_KEYFRAME_END"|"POINT_OBSOLETE"|"POINT_TRACKED"|"POINT_INTERPOLATED"|"POINT_UNDEFINED"
<hom_calc_mode>			= "HOM_TY"|"HOM_STY"|"HOM_RTY"|"HOM_SRTY"|"HOM_SRTYP"|"HOM_T"|"HOM_ST"|"HOM_RT"|"HOM_SRT"|"HOM_SRTP"|"HOM_HOM"
<stereo_interocular>		= "STEREO_IO_STATIC"|"STEREO_IO_DYNAMIC"
<focal length mode>		= "FOCAL_USE_FROM_LENS"|"FOCAL_STATIC"|"FOCAL_DYNAMIC"
<focus mode>			= "FOCUS_USE_FROM_LENS"|"FOCUS_STATIC"|"FOCUS_DYNAMIC"
<matrix_point_status>		= "MATRIX_POINT_RELEASED"|"MATRIX_POINT_USER"|"MATRIX_POINT_AUTO"
<widget_attach_mode>		= "ATTACH_WIDGET"|"ATTACH_OPPOSITE_WIDGET"|"ATTACH_WINDOW"|"ATTACH_OPPOSITE_WINDOW"|"ATTACH_POSITION"|"ATTACH_NONE"|"ATTACH_AS_IS"
<ref_pattern_mode>		= "REF_PATTERN_PREVIOUS_FRAME"|"REF_PATTERN_PREVIOUS_KEYFRAME"|"REF_PATTERN_FIRST_KEYFRAME"|"REF_PATTERN_EXPLICIT_FRAME"
<parameter_type>		= "ADJUST_LENS_FBACK_WIDTH"|"ADJUST_LENS_FBACK_HEIGHT"|"ADJUST_LENS_FOCAL_LENGTH"|"ADJUST_LENS_FILM_ASPECT"|"ADJUST_LENS_LCO_X"|"ADJUST_LENS_LCO_Y"|
				  "ADJUST_LENS_PIXEL_ASPECT"|"ADJUST_LENS_CUSTOM_FOCUS"|"ADJUST_LENS_DISTORTION_PARAMETER"|"ADJUST_CAMERA_SYNC_TIMESHIFT"|"ADJUST_CAMERA_STEREO_VERTICAL_SHIFT"|
				  "ADJUST_CAMERA_STEREO_DEPTH_SHIFT"|"ADJUST_CAMERA_STEREO_INTEROCULAR"|"ADJUST_CAMERA_ROLLING_SHUTTER"
<dynamic_distortion_mode>	= "DISTORTION_STATIC"|"DISTORTION_DYNAMIC_FOCAL_LENGTH"|"DISTORTION_DYNAMIC_FOCUS_DISTANCE"|"DISTORTION_DYNAMIC_FOCAL_AND_FOCUS"
<script_call_hint>		= "CALL_COMMAND_LINE"|"CALL_WIDGET_CALLBACK"|"CALL_UPDATE_CALLBACK"|"CALL_CREATE_NEW_POINT_CALLBACK"|"CALL_GUI_CONTEXT_MENU"|"CALL_QUIT_3DE_CALLBACK"|
				  "CALL_GUI_MENU"|"CALL_GUI_BUTTON"|"CALL_STARTUP"|"CALL_TIMER"|"CALL_ADJUSTMENT"|"CALL_GUI_CONFIG_MENU"|"CALL_OPEN_PROJECT_CALLBACK"|"CALL_ADJUSTMENT_INITIAL"|"CALL_EMBED_INTO_ATTRIBUTE_EDITOR"
<bf_culling_mode>		= "BF_CULLING_OFF"|"BF_CULLING_REGULAR"|"BF_CULLING_INVERTED"
<image_type>			= "NONINTERLACE"|"INTERLACE_EVEN"|"INTERLACE_ODD"
<sync_mode>			= "SYNC_OFF"|"SYNC_PRIMARY"|"SYNC_SECONDARY"
<sync_constraints>		= "SYNC_CONSTR_NONE"|"SYNC_CONSTR_POS_FIXED"|"SYNC_CONSTR_ROT_POS_FIXED"
<3d_object_type>		= "3D_GROUP"|"3D_PRIMITIVE"|"3D_POLYGONAL"
<para_type>			= "LDP_STRING"|"LDP_DOUBLE"|"LDP_INT"|"LDP_FILE"|"LDP_TOGGLE"|"LDP_DOUBLE_ADJUST"
<pos_constr_mode>		= "PCONSTR_NONE"|"PCONSTR_FIXED_CAMERA_POSITION"|"PCONSTR_PLANE"|"PCONSTR_LINE"|"PCONSTR_CIRCLE"
<pos_constr_orient>		= "PCONSTR_ORIENT_NONE"|"PCONSTR_ORIENT_XY"|"PCONSTR_ORIENT_XZ"|"PCONSTR_ORIENT_YZ"
<point_3d_status>		= "NOT_CALCULATED"|"CALCULATED"|"TRIANGULATED"
<point_valid_mode>		= "POINT_VALID_INSIDE_FOV"|"POINT_VALID_INSIDE_FRAME"|"POINT_VALID_ALWAYS"
<texmap_mode>			= "TEXMAP_NONE"|"TEXMAP_PROJECTION"|"TEXMAP_UV"
<requester_status>		= "REQUESTER_UNPOSTED"|"REQUESTER_POSTED_IN_WINDOW"|"REQUESTER_POSTED_IN_PANE_STRUCTURE"|"REQUESTER_POSTED_IN_ATTRIBUTE_EDITOR"
<point_weighting_mode>		= "POINT_WEIGHT_STATIC"|"POINT_WEIGHT_AUTO"|"POINT_WEIGHT_DYNAMIC"
<overall_motion_mode>		= "OVERALL_MOTION_NONE"|"OVERALL_MOTION_AUTO"|"OVERALL_MOTION_MANUAL"


############
# misc...

<3de_install_path>			get3DEInstallPath()
<3de_version>				get3DEVersion()

<vector 2d>				removeDistortion2D(<camera_id>, <frame>, <vector 2d>)
<vector 2d>				applyDistortion2D(<camera_id>, <frame>, <vector 2d>)

[m00,m01,m10,m11]			getDistortion2DJacobianMatrix(<camera_id>, <frame>, <vector 2d>)

[double,double,...]			filter1D([double,double,...], <cutoff>, "FOURIER_FILTER"|"GAUSS_FILTER"|"BUTTERWORTH_FILTER")

<double>				acos(<double>)
<double>				asin(<double>)
<double>				atan2(<double>, <double>)
<double>				cos(<double>)
<double>				sin(<double>)
<double>				sqrt(<double>)

<matrix 3d>				calcHomography2D([<vector 2d>,<vector 2d>,...], [<vector 2d>,<vector 2d>,...], [<weight>,<weight>,...], <pivot 2d>, <hom_calc_mode>)

<string>				getProjectNotes()
					setProjectNotes(<string>)

<double>				getNearClippingPlane()
					setNearClippingPlane(<double>)
<double>				getFarClippingPlane()
					setFarClippingPlane(<double>)

<double>				getNearClippingPlaneF6()
					setNearClippingPlaneF6(<double>)
<double>				getFarClippingPlaneF6()
					setFarClippingPlaneF6(<double>)

<int>					getMotionblurRenderingSamples()
					setMotionblurRenderingSamples(<int>)

<double>				getLineRenderingWidth()
					setLineRenderingWidth(<double>)

0|1					checkPointConsistency2D(<pgroup_id>, <point_id>, <camera_id>, <frame_a>, <frame_b>, <sensitivity>)

[<matrix 3d>,<vector 3d>]		alignPlaneToPoints3D([<vector 3d>,<vector 3d>,...])

[<matrix 3d>,<vector 3d>]		convertObjectPGroupTransformation3DEToWorld(<camera_id>, <frame>, <matrix 3d>, <vector 3d>, <pgroup_scale>, <ignore_scene_node>)
[<matrix 3d>,<vector 3d>]		convertObjectPGroupTransformationWorldTo3DE(<camera_id>, <frame>, <matrix 3d>, <vector 3d>, <pgroup_scale>, <ignore_scene_node>)

					setTimerCallbackFunction(<function name>, <timeout_in_ms>)
					removeTimerCallback()
[<function name>, <timeout_in_ms>]	getTimerCallbackFunction()

<xml_string>				convertOpenEXRMetaDataToXML(<filename>)
[<data_w>,<data_h>,<disp_w>,<disp_h>]	getOpenEXRDisplayDataWindowResolution(<filename>)

[<width_px>, <height_px>]		getImageFileResolution(<filename>)
[<red>, <green>, <blue>]		getImageFilePixel(<filename>, <x>, <y>, <import_exr_display_window>)

[<vector 2d>,"FRONT"|"REAR"|"ERROR"]	convert2DPositionRegularToLLC(<film aspect>, <horiz. angle>, <camera pan>, <camera tilt>, <vector 2d>)
<vector 2d>				convert2DPositionLLCToRegular(<film aspect>, <horiz. angle>, <camera pan>, <camera tilt>, <vector 2d>)

					addPersistentString(<custom_tag>, <custom_string>)
<custom_string>				getPersistentString(<custom_tag>)
[<tag #1>, <tag #2>, ...]		getPersistentTags()

<string>				getPreferenceValue(<tag>)
					setPreferenceValue(<tag>, <string>)

[<vector 2d>, <vector 2d>,...]		approximateByPolynomial2(<degree>,"CHEBYSHEV1"|"MONOMIAL",[<vector 2d>, <vector 2d>, <vector 2d>,...])

					calcRotomationSkeleton(<camera_id>, <frame>, <pgroup>, <root point_id>, <show_both_nf_points>)

<deviation_px>				calcDistortionFromPixelPairs(<camera_id>, <frame>, <calc_lco_x>, <calc_lco_y>, [ [x0,y0], [x1,y1], ...], [ [xd0,yd0], [xd1,yd1], ...])





########################################
# custom gui, requester and widgets...

<int>					postQuestionRequester(<window title>, <message>, <label 0>, <label 1> ,...)
<path>|[<path>,<path>,...]		postFileRequester(<window title>, <filter_pattern>, <default path>, <multi_selection>)

					postProgressRequesterAndContinue(<window title>, <message>, <max_progress>, <label 0>, <label 1> ,...)
<int>					updateProgressRequester(<progress>, <message>)
					unpostProgressRequester()

<requester id>				createCustomRequester()
					deleteCustomRequester(<requester id>)
<int>					postCustomRequester(<requester id>, <window title>, <width>, <height>, <label 0>, <label 1> ,...)
					postCustomRequesterAndContinue(<requester id>, <window title>, <width>, <height>, <update callback function name>)
					unpostCustomRequester(<requester id>)
<requester_status>			isCustomRequesterPosted(<requester id>)

					addFileWidget(<requester id>, <widget name>, <label>, <filter_pattern>, <default path>)

					addTextFieldWidget(<requester id>, <widget name>, <label>, <default string>)

					addToggleWidget(<requester id>, <widget name>, <label>, 0|1)

					addOptionMenuWidget(<requester id>, <widget name>, <label>, <string 1>, <string 2> ,...)
					modifyOptionMenuWidget(<requester id>, <widget name>, <label>, <string 1>, <string 2> ,...)
					setOptionMenuWidgetItemSensitiveFlag(<requester id>, <widget name>, <item_index>, 0|1)

					addScaleWidget(<requester id>, <widget name>, <label>, "INT"|"DOUBLE", <min>, <max>, <default value>)

					addButtonWidget(<requester id>, <widget name>, <label>, <width>, <offset>, <right_of_widget>)

					addSeparatorWidget(<requester id>, <widget name>)

					addLabelWidget(<requester id>, <widget name>, <label>, "ALIGN_LABEL_LEFT"|"ALIGN_LABEL_CENTER"|"ALIGN_LABEL_RIGHT")

					addListWidget(<requester id>, <widget name>, <label>, <multi_selection>, <height>)
<item_index>				insertListWidgetItem(<requester id>, <widget name>, <label>, <userdata>, "LIST_ITEM_NODE"|"LIST_ITEM_ATOM", <parent_index>)
					removeListWidgetItem(<requester id>, <widget name>, <item_index>)
					removeAllListWidgetItems(<requester id>, <widget name>)
<number_of_items>			getListWidgetNoItems(<requester id>, <widget name>)
[<item_index>,<item_index>,...]		getListWidgetSelectedItems(<requester id>, <widget name>)
"LIST_ITEM_NODE"|"LIST_ITEM_ATOM"	getListWidgetItemType(<requester id>, <widget name>, <item_index>)
<parent_index>				getListWidgetItemParentIndex(<requester id>, <widget name>, <item_index>)
					setListWidgetItemCollapsedFlag(<requester id>, <widget name>, <item_index>, 0|1)
0|1					getListWidgetItemCollapsedFlag(<requester id>, <widget name>, <item_index>)
<label>					getListWidgetItemLabel(<requester id>, <widget name>, <item_index>)
					setListWidgetItemLabel(<requester id>, <widget name>, <item_index>, <label>)
<userdata>				getListWidgetItemUserdata(<requester id>, <widget name>, <item_index>)
					setListWidgetItemUserdata(<requester id>, <widget name>, <item_index>, <userdata>)
0|1					getListWidgetItemSelectionFlag(<requester id>, <widget name>, <item_index>)
					setListWidgetItemSelectionFlag(<requester id>, <widget name>, <item_index>, 0|1)
0|1					getListWidgetItemSelectableFlag(<requester id>, <widget name>, <item_index>)
					setListWidgetItemSelectableFlag(<requester id>, <widget name>, <item_index>, 0|1)
					centerListWidgetFirstSelectedItem(<requester id>, <widget name>)
[<red>,<green>,<blue>]			getListWidgetItemColor(<requester id>, <widget name>, <item_index>)
					setListWidgetItemColor(<requester id>, <widget name>, <item_index>, <red>, <green>, <blue>)
					setListWidgetCustomTabSpacing(<requester id>, <widget name>, <tab0>, <tab1>, <tab2>, <tab3>, <tab4>, <tab5>, <tab6>, <tab7>, <tab8>)

					addCurveAreaWidget(<requester id>, <widget name>, <label>, <height>)
					setCurveAreaWidgetDimensions(<requester id>, <widget name>, <x_min>, <x_max>, <y_min>, <y_max>)
					setCurveAreaWidgetFOV(<requester id>, <widget name>, <x1>, <x2>, <y1>, <y2>)
					setCurveAreaWidgetCursorPosition(<requester id>, <widget name>, <x>, <stepping>)
<x>					getCurveAreaWidgetCursorPosition(<requester id>, <widget name>)
					attachCurveAreaWidgetCurve(<requester id>, <widget name>, <curve_id>, <red>, <green>, <blue>, <editable>)
					detachCurveAreaWidgetCurve(<requester id>, <widget name>, <curve_id>)
					detachCurveAreaWidgetAllCurves(<requester id>, <widget name>)
[<curve_id>,<curve_id>,...]		getCurveAreaWidgetCurveList(<requester id>, <widget name>)
					setCurveAreaWidgetXOffset(<requester id>, <widget name>, <x_offset>)
					addCurveAreaWidgetRange(<requester id>, <widget name>, <range_start>, <range_end>, <red>, <green>, <blue>, <alpha>)
					removeAllCurveAreaWidgetRanges(<requester id>, <widget name>)

					addMenuBarWidget(<requester id>, <widget name>)
					addMenuWidget(<requester id>, <widget name>, <label>, <parent widget>, <mutual exclude toggles>)
					addMenuButtonWidget(<requester id>, <widget name>, <label>, <parent widget>)
					addMenuToggleWidget(<requester id>, <widget name>, <label>, <parent widget>, 0|1)
					addMenuSeparatorWidget(<requester id>, <widget name>, <parent widget>)

					addTextAreaWidget(<requester id>, <widget name>, <label>, <height>, <editable>)
					appendTextAreaWidgetString(<requester id>, <widget name>, <string>)
					clearTextAreaWidget(<requester id>, <widget name>)
<string>				getTextAreaWidgetString(<requester id>, <widget name>)
					setTextAreaWidgetCursorPosition(<requester id>, <widget name>, <position>)
<position>				getTextAreaWidgetCursorPosition(<requester id>, <widget name>)
					setTextAreaWidgetSelection(<requester id>, <widget name>, <start>, <end>)
[<start>, <end>]			getTextAreaWidgetSelection(<requester id>, <widget name>)
					setTextAreaWidgetScrollPosition(<requester id>, <widget name>, <position>)
<position>				getTextAreaWidgetScrollPosition(<requester id>, <widget name>)

					add3DAreaWidget(<requester id>, <widget name>, <label>, <height>, <catch_raw_events>)
					set3DAreaWidgetRenderTree(<requester id>, <widget name>, <3d_group>)
					set3DAreaWidgetFocal(<requester id>, <widget name>, <double>)
					set3DAreaWidgetOrthoMode(<requester id>, <widget name>, 0|1)
					set3DAreaWidgetClippingPlanes(<requester id>, <widget name>, <near_cplane>, <far_cplane>)
					set3DAreaWidgetManipulatorMode(<requester id>, <widget name>, "3D_MANIP_NONE"|"3D_MANIP_TRANSLATE"|"3D_MANIP_ROTATE"|"3D_MANIP_SCALE"|"3D_MANIP_UNISCALE")
					set3DAreaWidgetManipulatorGroup(<requester id>, <widget name>, <3d_group>, <max_depth>)
					set3DAreaWidgetManipulatorSize(<requester id>, <widget name>, <double>)
<double>				get3DAreaWidgetManipulatorSize(<requester id>, <widget name>)
					set3DAreaWidgetCamera(<requester id>, <widget name>, <eye>, <target>)
[<eye>, <target>]			get3DAreaWidgetCamera(<requester id>, <widget name>)


					removeWidget(<requester id>, <widget name>)
					removeAllWidgets(<requester id>)
0|1					widgetExists(<requester id>, <widget name>)

<value>					getWidgetValue(<requester id>, <widget name>)
0|1					setWidgetValue(<requester id>, <widget name>, <string>)

<function name>				getWidgetCallbackFunction(<requester id>, <widget name>)
					setWidgetCallbackFunction(<requester id>, <widget name>, <function name>)

0|1					getWidgetSensitiveFlag(<requester id>, <widget name>)
					setWidgetSensitiveFlag(<requester id>, <widget name>, 0|1)

0|1					getWidgetVisibleFlag(<requester id>, <widget name>)
					setWidgetVisibleFlag(<requester id>, <widget name>, 0|1)

[<x>, <y>, <width>, <height>]		getWidgetDimensions(<requester id>, <widget name>)

					setWidgetSize(<requester id>, <widget name>, <width>, <height>)
					setWidgetOffsets(<requester id>, <widget name>, <left offset>, <right offset>, <top offset>, <bottom offset>)
					setWidgetLinks(<requester id>, <widget name>, <left link>, <right link>, <top link>, <bottom link>)
					setWidgetAttachModes(<requester id>, <widget name>, <left mode>, <right mode>, <top mode>, <bottom mode>)

					setWidgetShortcut(<requester id>, <widget name>, <shortcut opcode>)

					setWidgetFGColor(<requester id>, <widget name>, <r>, <g>, <b>)
					setWidgetBGColor(<requester id>, <widget name>, <r>, <g>, <b>)
					setWidgetHLColor(<requester id>, <widget name>, <r>, <g>, <b>)
					restoreWidgetDefaultColors(<requester id>, <widget name>)

<label>					getWidgetLabel(<requester id>, <widget name>)
					setWidgetLabel(<requester id>, <widget name>, <label>)



##############################################
# interaction with regular user interface...

<pgroup_id>				getCurrentPGroup()
<camera_id>				getCurrentCamera()
<frame>					getCurrentFrame(<camera_id>)

					setCurrentPGroup(<pgroup_id>)
					setCurrentCamera(<camera_id>)
<frame>					setCurrentFrame(<camera_id>, <frame>)

<object_id>				getContextMenuObject()
<object_id>				getContextMenuParentObject()

<script_call_hint>			getCurrentScriptCallHint()

<script_filepath>			getLastScriptFilepath()
<menu_label>				getLastScriptMenuLabel()

<curve_id>				getFirstCurrentCurve()
<curve_id>				getNextCurrentCurve(<curve_id>)

<curve mode>				getCurrentCurveMode()

0|1					getCurveEditorGlobalSpaceModeFlag()

					pushCurrentCurvesToUndoStack()

					pushPointsToUndoStack()

					setCreateNewPointCallbackFunction(<function name>)
					setOpenProjectCallbackFunction(<function name>)
					setQuit3DECallbackFunction(<function name>)


<absolute_path>				getProjectPath()
					setProjectPath(<absolute_path>)
0|1					isProjectUpToDate()
0|1					loadProject(<absolute_path>, <add_path_to_recent_list>)
0|1					saveProject(<absolute_path>, <add_path_to_recent_list>)
					newProject()

0|1					calcAllFromScratch()

<int>					getCalcCounter()

<deviation>				calcLensParametersFromMatrix(<camera_id>, "<lens parameter #1>", "<lens parameter #2>", "<lens parameter #3>",...)


					updateGUI(<avoid_rekursive_requester_updates>)
					flushEventQueue()

					clearConsole()
					flushConsoleOutput()

0|1					importBufferCompressionFile(<camera_id>)

					calcMatchFrame(<pgroup_id>, <camera_id>, <frame>, <use_lineup_points_only>)
					calcMatchFrameRotation3DOnly(<pgroup_id>, <camera_id>, <frame>, <use_lineup_points_only>)
					calcMatchFramePosition3DOnly(<pgroup_id>, <camera_id>, <frame>, <use_lineup_points_only>)

0|1					saveRenderCacheFrame(<camera_id>, <frame>, <filename>, "IMAGE_JPEG"|"IMAGE_TIFF"|"IMAGE_PNG", <image_scale>, <overscan>, <reapply_distortion>, <x_offset>, <y_offset>, <window_width>, <window_height>)
					clearRenderCache()
					setRenderCacheFlags(<show_fov>, <show_fov_crop_mask>, <show_2d_points>, <show_3d_models>, <show_geo_lines>, <show_horizon>, <render_mblur>, <remove_rs>, <undistort>, <foreground_rendering>, <anaglyph_rendering>, <show_3d_points>, <show_tracked_3d_points_only>)
					setRenderCacheCommentString(<comment_string>, <left_pos_px>, <bottom_pos_px>, <font_height_px>)
					setRenderCacheCommentStringColors(<fg_red>, <fg_green>, <fg_blue>, <fg_alpha>, <bg_red>, <bg_green>, <bg_blue>, <bg_alpha>)

0|1					saveRenderCacheZBuffer(<camera_id>, <frame>, <filename>, "IMAGE_JPEG"|"IMAGE_TIFF"|"IMAGE_OPENEXR", <image_scale>, <overscan>)

<string>				getClipboardString()
					setClipboardString(<string>)

					rescanPythonDirs()

[<eye>,<target>,<up>,<focal>]		getOrientControlsView()
					setOrientControlsView(<eye>, <target>, <up>, <focal>)

					setOrientControlsManipulatorAlignment(<matrix 3d>, <vector 3d>)

[<pos 3d>, <rot 3d>, <focal>, <dev>]	calcCameraLSF(<camera pos 3d>, <camera rot 3d>, <fback w>, <fback h>, <fov w px>, <fov h px>, <lco x>, <lco y>, <focal>, [ [<point pos 3d>, <fov 2d>, <weight>], ... ], <lock px>, <lock py>, <lock pz>, <lock rx>, <lock ry>, <lock rz>, <lock focal>, <calc from scratch>)
[<pos 3d>, <rot 3d>, <focal>, <dev>]	calcObjectLSF(<object pos 3d>, <object rot 3d>, <camera pos 3d>, <camera rot 3d>, <fback w>, <fback h>, <fov w px>, <fov h px>, <lco x>, <lco y>, <focal>, [ [<point pos 3d>, <fov 2d>, <weight>], ... ], <lock px>, <lock py>, <lock pz>, <lock rx>, <lock ry>, <lock rz>, <lock focal>, <calc from scratch>)

0|1					saveMainWindowScreenShot(<filename>, "IMAGE_JPEG"|"IMAGE_TIFF"|"IMAGE_PNG", <offset_x>, <offset_y>, <width>, <height>)
[<width>, <height>]			getMainWindowResolution()


					addFrameSliderMark(<frame a>, <frame b>, <red>, <green>, <blue>, <alpha>)
					deleteAllFrameSliderMarks()

<number of CPU cores>			getAvailableCPUCores()

[<x_px>, <y_px>, <scale>]		getDisplayAreaTransformation()
					setDisplayAreaTransformation(<x_px>, <y_px>, <scale>)

[<x_px>, <y_px>, <width>, <height>]	getDisplayAreaDimensions()



##########################
# 2D tracking engines...

				setTrackEngineMode(<tracking_mode>)
				setTrackEngineFlags(<enhanced_mode>, <comp_lum_changes>, <allow_rotation>, <allow_scaling>)
				setTrackEngineRGBWeights(<red>, <blue>, <green>)
				setTrackEngineBlurring(<blur_mode>)

				setTrackEnginePattern(<camera_id>, <frame>, <point_2d>, <search_2d>, <pattern_2d>, <offset_2d>, <rot>)
				setTrackEngineRefPattern(<camera_id>, <frame>, <point_2d>, <pattern_2d>, <offset_2d>, <rot>)

				setTrackEngineCustomTransform(<matrix 3d>)

<vector 2d>			runTrackEngineProcedure("TRACK_ENGINE_USE_DEFAULT_TRANSFORM"|"TRACK_ENGINE_USE_CUSTOM_TRANSFORM"|"TRACK_ENGINE_CALC_TRANSFORM_FROM_SCRATCH")

<double>			getTrackEngineProcedureDeviation()
<matrix 3d>			getTrackEngineProcedureTransform()


<vector 2d>			runMatrixTrackingProcedure(<camera_id>, <frame>, <start_vector_2d>, <search_area_width>, <search_area_height>)


				setGPUTrackEngineFlags(<comp_lum_changes>)
				setGPUTrackEngineRGBWeights(<red>, <blue>, <green>)
				setGPUTrackEngineBlurring(<blur_mode>)
				setGPUTrackEngineDeepTracking(<double>)

				setGPUTrackEngineSearchArea(<camera_id>, <frame>, <lower_left_2d>, <lower_right_2d>, <upper_right_2d>, <upper_left_2d>)
				setGPUTrackEngineRefPattern(<camera_id>, <frame>, <point_2d>, <pattern_2d>, <offset_2d>, <rot>)

<vector 2d>			runGPUTrackEngineProcedure()

<double>			getGPUTrackEngineProcedureDeviation()
"GT_ERROR","GT_GOOD","GT_BAD"	getGPUTrackEngineProcedureStatus()



##############################
# Image Controls...

				setIControlsEnabledFlag(0|1)
0|1				getIControlsEnabledFlag()

				setIControlsCurrentPreset(<preset>)
<preset>			getIControlsCurrentPreset()

				setIControlsChromaKeyEnabledFlag(<preset>, 0|1)
0|1				getIControlsChromaKeyEnabledFlag(<preset>)
				setIControlsChromaKeySamples(<preset>, [[r,g,b,add_flag], [r,g,b,add_flag], ...])
[[r,g,b,add_flag], ...]		getIControlsChromaKeySamples(<preset>)
				setIControlsChromaKeyMaskFlag(<preset>, 0|1)
0|1				getIControlsChromaKeyMaskFlag(<preset>)
				setIControlsChromaKeyRange(<preset>, <double>)
<double>			getIControlsChromaKeyRange(<preset>)
				setIControlsChromaKeyContrast(<preset>, <double>)
<double>			getIControlsChromaKeyContrast(<preset>)
				updateIControlsChromaKey()

				setIControlsCurvesEnabledFlag(<preset>, 0|1)
0|1				getIControlsCurvesEnabledFlag(<preset>)
<curve_id>			getIControlsCurvesCurve(<preset>, "LUMINANCE"|"RED"|"GREEN"|"BLUE")

				setIControlsColorControlsEnabledFlag(<preset>, 0|1)
0|1				getIControlsColorControlsEnabledFlag(<preset>)
				setIControlsColorControlsGamma(<preset>, <double>)
<double>			getIControlsColorControlsGamma(<preset>)
				setIControlsColorControlsRed(<preset>, <double>)
<double>			getIControlsColorControlsRed(<preset>)
				setIControlsColorControlsGreen(<preset>, <double>)
<double>			getIControlsColorControlsGreen(<preset>)
				setIControlsColorControlsBlue(<preset>, <double>)
<double>			getIControlsColorControlsBlue(<preset>)
				setIControlsColorControlsBrightness(<preset>, <double>)
<double>			getIControlsColorControlsBrightness(<preset>)
				setIControlsColorControlsContrast(<preset>, <double>)
<double>			getIControlsColorControlsContrast(<preset>)
				setIControlsColorControlsSaturation(<preset>, <double>)
<double>			getIControlsColorControlsSaturation(<preset>)

				setIControlsBlurSharpenEnabledFlag(<preset>, 0|1)
0|1				getIControlsBlurSharpenEnabledFlag(<preset>)
				setIControlsBlurSharpen(<preset>, <int>)
<int>				getIControlsBlurSharpen(<preset>)



###########################
# Parameter Adjustment...

0|1				getParameterAdjustFlag(<db_obj id>, <parameter_type>, <lens_distortion_para_name>)
				setParameterAdjustFlag(<db_obj id>, <parameter_type>, <lens_distortion_para_name>, 0|1)
				removeAllAdjustParameters()

				createParameterAdjustScript(<path_to_script>, <parameter_name>, <custom_parameters>, <range_from>, <range_to>)

<double>			getParameterAdjustCurrentValue()
<custom_parameters>		getParameterAdjustCustomParameters()
0|1				getParameterAdjustPhaseRunningFlag()
				applyParameterAdjustDataModification(<modification_string>, <double>)



#############################
# 3D Render Object Trees...

<3d_object>			create3DObject(<3d_object_type>, <3d_group>)
				delete3DObject(<3d_object>)
<3d_object_type>		get3DObjectType(<3d_object>)
				set3DObjectColor(<3d_object>, <red>, <green>, <blue>, <alpha>)
				set3DObjectSelectColor(<3d_object>, <red>, <green>, <blue>, <alpha>)
				set3DObjectVisibleFlag(<3d_object>, 0|1)
				set3DObjectSelectableFlag(<3d_object>, 0|1)
				set3DObjectSelectionRootFlag(<3d_object>, 0|1)
				set3DObjectSelectedFlag(<3d_object>, 0|1)
0|1				get3DObjectSelectedFlag(<3d_object>)
				set3DObjectUserData(<3d_object>, <user_data>)
<user_data>			get3DObjectUserData(<3d_object>)
<3d_group>			get3DObjectParentGroup(<3d_object>)
				add3DObjectVertex(<3d_object>, <vector 3d>)
				delete3DObjectAllVertices(<3d_object>)

				set3DGroupPosition3D(<3d_group>, <vector 3d>)
<vector 3d>			get3DGroupPosition3D(<3d_group>)
				set3DGroupRotation3D(<3d_group>, <matrix 3d>)
<matrix 3d>			get3DGroupRotation3D(<3d_group>)
				add3DGroupChild(<3d_group>, <3d_object>)
				remove3DGroupChild(<3d_group>, <3d_object>)			# <3d_object> will not be destroyed!
[<3d_object>,<3d_object>,...]	get3DGroupChildList(<3d_group>, <selected_only>)
<3d_object>			find3DGroupChild(<3d_group>, <user_data>, <traverse_down_thru_child_tree>)
				set3DGroupRenderAttributes(<3d_group>, <point_size>, <line_width>)

				set3DPrimitiveRenderMode(<3d_primitive>, "POINTS"|"LINES"|"LINE_STRIP"|"LINE_LOOP"|"POLYGON"|"TRIANGLE_FAN"|"TEXRECT")
				set3DPrimitiveLabel(<3d_primitive>, <label>)
				set3DPrimitiveTexrectFrame(<3d_primitive>, <camera_id>, <frame>)

				add3DPolygonalFace(<3d_polygonal>, <filled>, [<vertex_index>,<vertex_index>,<vertex_index>,...])
				delete3DPolygonalAllFaces(<3d_polygonal>)
				set3DPolygonalHiddenLineMode(<3d_polygonal>, 0|1)
				set3DPolygonalCullingMode(<3d_polygonal>, <bf_culling_mode>)
				set3DPolygonalRenderModes(<3d_polygonal>, <show_points>, <show_lines>, <show_faces>)


##################
# scene node...

<vector 3d>			getScenePosition3D()
<matrix 3d>			getSceneRotation3D()
<double>			getSceneScale3D()
				setScenePosition3D(<vector 3d>)
				setSceneRotation3D(<matrix 3d>)
				setSceneScale3D(<double>)
0|1				getSceneSelectionFlag()
				setSceneSelectionFlag(0|1)




####################
# point groups...

<pgroup_id>			createPGroup("CAMERA"|"OBJECT"|"MOCAP")
				deletePGroup(<pgroup_id>)
"CAMERA"|"OBJECT"|"MOCAP"	getPGroupType(<pgroup_id>)
				setPGroupType(<pgroup_id>, "CAMERA"|"OBJECT"|"MOCAP")
<pgroup_id>			getFirstPGroup()
<pgroup_id>			getNextPGroup(<pgroup_id>)
[<pgroup_id>,<pgroup_id>,...]	getPGroupList(<selected_only>)
<number_of_pgroups>		getNoPGroups()
<pgroup_id>			getIndexPGroup(<index>)
<pgroup_id>			findPGroupByName(<name>)
0|1				getPGroupSelectionFlag(<pgroup_id>)
				setPGroupSelectionFlag(<pgroup_id>, 0|1)
0|1				getPGroupEnabledFlag(<pgroup_id>)
				setPGroupEnabledFlag(<pgroup_id>, 0|1)
<name>				getPGroupName(<pgroup_id>)
				setPGroupName(<pgroup_id>, <name>)
<double>			getPGroupDeviation(<pgroup_id>, <camera_id>, <frame>)
				setPGroupDeviation(<pgroup_id>, <camera_id>, <frame>, <double>)
<double>			getPGroupAverageDeviation(<pgroup_id>, <camera_id>)
				setPGroupAverageDeviation(<pgroup_id>, <camera_id>, <double>)
<vector 3d>			getPGroupPosition3D(<pgroup_id>, <camera_id>, <frame>)
<matrix 3d>			getPGroupRotation3D(<pgroup_id>, <camera_id>, <frame>)
<double>			getPGroupScale3D(<pgroup_id>)
				setPGroupScale3D(<pgroup_id>, <double>)
				setPGroupPosition3D(<pgroup_id>, <camera_id>, <frame>, <vector 3d>)
				setPGroupRotation3D(<pgroup_id>, <camera_id>, <frame>, <matrix 3d>)
				filterPGroup(<pgroup_id>, <camera_id>)
<postfilter_mode>		getPGroupPostfilterMode(<pgroup_id>)
				setPGroupPostfilterMode(<pgroup_id>, <postfilter_mode>)
<double>			getPGroupPostfilterValue(<pgroup_id>)
				setPGroupPostfilterValue(<pgroup_id>, <double>)
0|1				getPGroupLineup3DPoseFlag(<pgroup_id>, <camera_id>, <frame>)
<vector 3d>			getPGroupLineup3DPosePosition(<pgroup_id>, <camera_id>, <frame>)
<matrix 3d>			getPGroupLineup3DPoseRotation(<pgroup_id>, <camera_id>, <frame>)
<curve_id>			getPGroupEditCurve(<pgroup_id>, <camera_id>, "TX_CURVE"|"TY_CURVE"|"TZ_CURVE"|"RX_CURVE"|"RY_CURVE"|"RZ_CURVE")
0|1				getPGroupFrameSelectionFlag(<pgroup_id>, <camera_id>, <frame>)
				setPGroupFrameSelectionFlag(<pgroup_id>, <camera_id>, <frame>, 0|1)
				savePGroupLineup3DPose(<pgroup_id>, <camera_id>, <frame>)
				removePGroupLineup3DPoseFlag(<pgroup_id>, <camera_id>, <frame>)
				makePGroupChildSpaceCurvesConsistentToGlobalSpaceCurves(<pgroup_id>)
				copyPGroupEditCurvesToFilteredCurves(<pgroup_id>, <camera_id>)
<curve_id>			getPGroupEditCurveGlobalSpace(<pgroup_id>, <camera_id>, "TX_CURVE"|"TY_CURVE"|"TZ_CURVE"|"RX_CURVE"|"RY_CURVE"|"RZ_CURVE")
<int>				getPGroupPersistentID(<pgroup_id>)
<pgroup_id>			findPGroupByPersistentID(<int>)
0|1				getPGroupAutoRootframesFlag(<pgroup_id>)
				setPGroupAutoRootframesFlag(<pgroup_id>, 0|1)
[<camera_id>, <frame>]		getPGroupRootFrameA(<pgroup_id>)
				setPGroupRootFrameA(<pgroup_id>, <camera_id>, <frame>)
[<camera_id>, <frame>]		getPGroupRootFrameB(<pgroup_id>)
				setPGroupRootFrameB(<pgroup_id>, <camera_id>, <frame>)
0|1				getPGroupAffectSyncedCamerasFlag(<pgroup_id>)
				setPGroupAffectSyncedCamerasFlag(<pgroup_id>, 0|1)
0|1				getPGroupInvertPointCloudFlag(<pgroup_id>)
				setPGroupInvertPointCloudFlag(<pgroup_id>, 0|1)
[<near_point>,<far_point>]	getPGroupInvertPointCloudPoints(<pgroup_id>)
				setPGroupInvertPointCloudPoints(<pgroup_id>, <near_point>, <far_point>)
<overall_motion_mode>		getPGroupExtractOverallMotionMode(<pgroup_id>)
				setPGroupExtractOverallMotionMode(<pgroup_id>, <overall_motion_mode>)
[<point1>,<point2>,<point3>]	getPGroupExtractOverallMotionPoints(<pgroup_id>)
				setPGroupExtractOverallMotionPoints(<pgroup_id>, <point1>, <point2>, <point3>)




#############################
# Distance Constraints...

<dconstr_id>			createDConstr(<pgroup_id>)
				deleteDConstr(<pgroup_id>, <dconstr_id>)
[<dconstr_id>,<dconstr_id>,...]	getDConstrList(<pgroup_id>, <selected_only>)
				setDConstrPoints(<pgroup_id>, <dconstr_id>, <point1_id>, <point2_id>)
[<point1_id>,<point2_id>]	getDConstrPoints(<pgroup_id>, <dconstr_id>)
				setDConstrDistance(<pgroup_id>, <dconstr_id>, <double>)
<double>			getDConstrDistance(<pgroup_id>, <dconstr_id>)
				setDConstrEnabledFlag(<pgroup_id>, <dconstr_id>, 0|1)
0|1				getDConstrEnabledFlag(<pgroup_id>, <dconstr_id>)
				setDConstrSelectionFlag(<pgroup_id>, <dconstr_id>, 0|1)
0|1				getDConstrSelectionFlag(<pgroup_id>, <dconstr_id>)
0|1				isDConstrValid(<pgroup_id>, <dconstr_id>)
<int>				getDConstrPersistentID(<pgroup_id>, <dconstr_id>)
<dconstr_id>			findDConstrByPersistentID(<pgroup_id>, <int>)



#############################
# Plane Constraints...

<pconstr_id>			createPConstr(<pgroup_id>)
				deletePConstr(<pgroup_id>, <pconstr_id>)
[<pconstr_id>,<pconstr_id>,...]	getPConstrList(<pgroup_id>, <selected_only>)
				setPConstrPoints(<pgroup_id>, <pconstr_id>, [<point_id>, <point_id>,...])
[<point_id>,<point_id>,...]	getPConstrPoints(<pgroup_id>, <pconstr_id>)
				setPConstrName(<pgroup_id>, <pconstr_id>, <name>)
<name>				getPConstrName(<pgroup_id>, <pconstr_id>)
				setPConstrEnabledFlag(<pgroup_id>, <pconstr_id>, 0|1)
0|1				getPConstrEnabledFlag(<pgroup_id>, <pconstr_id>)
				setPConstrSelectionFlag(<pgroup_id>, <pconstr_id>, 0|1)
0|1				getPConstrSelectionFlag(<pgroup_id>, <pconstr_id>)
<vector 3d>			getPConstrPosition3D(<pgroup_id>, <pconstr_id>)
				setPConstrPosition3D(<pgroup_id>, <pconstr_id>, <vector 3d>)
<matrix 3d>			getPConstrRotationScale3D(<pgroup_id>, <pconstr_id>)
				setPConstrRotationScale3D(<pgroup_id>, <pconstr_id>, <matrix 3d>)
<int>				getPConstrPersistentID(<pgroup_id>, <pconstr_id>)
<pconstr_id>			findPConstrByPersistentID(<pgroup_id>, <int>)



###############
# cameras...

<camera_id>			createCamera("SEQUENCE"|"REF_FRAME")
				deleteCamera(<camera_id>)
"SEQUENCE"|"REF_FRAME"		getCameraType(<camera_id>)
<camera_id>			getFirstCamera()
<camera_id>			getNextCamera(<camera_id>)
[<camera_id>,<camera_id>,...]	getCameraList(<selected_only>)
<number_of_cameras>		getNoCameras()
<camera_id>			getIndexCamera(<index>)
<camera_id>			findCameraByName(<name>)
0|1				getCameraSelectionFlag(<camera_id>)
				setCameraSelectionFlag(<camera_id>, 0|1)
0|1				getCameraEnabledFlag(<camera_id>)
				setCameraEnabledFlag(<camera_id>, 0|1)
<double>			getCameraFocalLength(<camera_id>, <frame>)
				setCameraFocalLength(<camera_id>, <frame>, <double>)
<name>				getCameraName(<camera_id>)
				setCameraName(<camera_id>, <name>)
<number_of_frames>		getCameraNoFrames(<camera_id>)
<path>				getCameraPath(<camera_id>)
				setCameraPath(<camera_id>, <path>)
[<start>,<end>,<step>]		getCameraSequenceAttr(<camera_id>)
				setCameraSequenceAttr(<camera_id>, <start>, <end>, <step>)
<double>			getCameraFPS(<camera_id>)
				setCameraFPS(<camera_id>, <double>)
<lens_id>			getCameraLens(<camera_id>)
				setCameraLens(<camera_id>, <lens_id>)
0|1				getCameraZoomingFlag(<camera_id>)			# obsolete
				setCameraZoomingFlag(<camera_id>, 0|1)			# obsolete
<curve_id>			getCameraZoomCurve(<camera_id>)
<image_width>			getCameraImageWidth(<camera_id>)
				setCameraImageWidth(<camera_id>, <image_width>)
<image_height>			getCameraImageHeight(<camera_id>)
				setCameraImageHeight(<camera_id>, <image_height>)
[<xa>,<xb>,<ya>,<yb>]		getCameraFOV(<camera_id>)
				setCameraFOV(<camera_id>, <xa>, <xb>, <ya>, <yb>)
<time_shift>			getCameraTimeshift(<camera_id>)				# obsolete
<curve_id>			getCameraStereoInterocularCurve(<camera_id>)
[<x0>,<x1>,<y0>,<y1>]		getCameraMatrixDimensions(<camera_id>)
				setCameraMatrixDimensions(<camera_id>, <x0>, <x1>, <y0>, <y1>)
<vector 2d>			getCameraMatrixPointPos(<camera_id>, <x>, <y>)
				setCameraMatrixPointPos(<camera_id>, <x>, <y>, <vector 2d>)
0|1				getCameraMatrixPointValidFlag(<camera_id>, <x>, <y>)
				setCameraMatrixPointValidFlag(<camera_id>, <x>, <y>, 0|1)
<matrix_point_status>		getCameraMatrixPointStatus(<camera_id>, <x>, <y>)
				setCameraMatrixPointStatus(<camera_id>, <x>, <y>, <matrix_point_status>)
<stereo_mode>			getCameraStereoMode(<camera_id>)
				setCameraStereoMode(<camera_id>, <stereo_mode>)
<stereo_orientation>		getCameraStereoOrientation(<camera_id>)
				setCameraStereoOrientation(<camera_id>, <stereo_orientation>)
<stereo_interocular>		getCameraStereoInterocular(<camera_id>)
				setCameraStereoInterocular(<camera_id>, <stereo_interocular>)
<proxy_footage>			getCameraProxyFootage(<camera_id>)
				setCameraProxyFootage(<camera_id>, <proxy_footage>)
				setCameraPlaybackRange(<camera_id>, <start>, <end>)
[<start>, <end>]		getCameraPlaybackRange(<camera_id>)
				setCameraCalculationRange(<camera_id>, <start>, <end>)
[<start>, <end>]		getCameraCalculationRange(<camera_id>)
				setCameraFrameRangeCalculationFlag(<camera_id>, 0|1)
0|1				getCameraFrameRangeCalculationFlag(<camera_id>)
<focal length mode>		getCameraFocalLengthMode(<camera_id>)
				setCameraFocalLengthMode(<camera_id>, <focal length mode>)
<focus mode>			getCameraFocusMode(<camera_id>)
				setCameraFocusMode(<camera_id>, <focus mode>)
<double>			getCameraFocus(<camera_id>, <frame>)
				setCameraFocus(<camera_id>, <frame>, <double>)
<curve_id>			getCameraFocusCurve(<camera_id>)
<double>			getCameraStereoStaticInterocular(<camera_id>)
				setCameraStereoStaticInterocular(<camera_id>, <double>)
<double>			getCameraStereoStaticVerticalShift(<camera_id>)
				setCameraStereoStaticVerticalShift(<camera_id>, <double>)
<double>			getCameraStereoStaticDepthShift(<camera_id>)
				setCameraStereoStaticDepthShift(<camera_id>, <double>)
0|1				getCameraRollingShutterEnabledFlag(<camera_id>)
				setCameraRollingShutterEnabledFlag(<camera_id>, 0|1)
<double>			getCameraRollingShutterTimeShift(<camera_id>)
				setCameraRollingShutterTimeShift(<camera_id>, <double>)
<double>			getCameraRollingShutterContentDistance(<camera_id>)
				setCameraRollingShutterContentDistance(<camera_id>, <double>)
<frame_offset>			getCameraFrameOffset(<camera_id>)
				setCameraFrameOffset(<camera_id>, <frame_offset>)
<shutter_angle>			getCameraShutterAngle(<camera_id>)
				setCameraShutterAngle(<camera_id>, <shutter_angle>)
<double>			getCameraWeight(<camera_id>)
				setCameraWeight(<camera_id>, <double>)
<image_type>			getCameraImageType(<camera_id>)
				setCameraImageType(<camera_id>, <image_type>)
[<black>, <white>]		getCamera8BitColorBlackWhite(<camera_id>)
				setCamera8BitColorBlackWhite(<camera_id>, <black>, <white>)
<gamma>				getCamera8BitColorGamma(<camera_id>)
				setCamera8BitColorGamma(<camera_id>, <gamma>)
<softclip>			getCamera8BitColorSoftclip(<camera_id>)
				setCamera8BitColorSoftclip(<camera_id>, <softclip>)
<sync_mode>			getCameraSyncMode(<camera_id>)
				setCameraSyncMode(<camera_id>, <sync_mode>)
<sync_constraints>		getCameraSyncConstraints(<camera_id>)
				setCameraSyncConstraints(<camera_id>, <sync_constraints>)
<double>			getCameraSyncTimeshift(<camera_id>)
				setCameraSyncTimeshift(<camera_id>, <double>)
0|1				getCameraStereoRotationPolicy(<camera_id>)
				setCameraStereoRotationPolicy(<camera_id>, 0|1)
<filename>			getCameraFrameFilepath(<camera_id>, <frame>)
<pos_constr_mode>		getCameraPosConstraintMode(<camera_id>)
				setCameraPosConstraintMode(<camera_id>, <pos_constr_mode>)
<pos_constr_orient>		getCameraPosConstraintOrientation(<camera_id>)
				setCameraPosConstraintOrientation(<camera_id>, <pos_constr_orient>)
[0|1, <double>]			getCameraPosConstraintForceY(<camera_id>)
				setCameraPosConstraintForceY(<camera_id>, 0|1, <double>)
[<tx>,<ty>,<tz>,<rx>,<ry>,<rz>]	getCameraPosRotLockChannelFlags(<camera_id>)
				setCameraPosRotLockChannelFlags(<camera_id>, <tx>, <ty>, <tz>, <rx>, <ry>, <rz>)
0|1				getCameraLongLatConversionEnabledFlag(<camera_id>)
				setCameraLongLatConversionEnabledFlag(<camera_id>, 0|1)
[<width>,<height>]		getCameraLongLatConversionResolution(<camera_id>)
				setCameraLongLatConversionResolution(<camera_id>, <width>, <height>)
<double>			getCameraLongLatConversionHorizAngle(<camera_id>)
				setCameraLongLatConversionHorizAngle(<camera_id>, <double>)
<curve_id>			getCameraLongLatConversionPanCurve(<camera_id>)
<curve_id>			getCameraLongLatConversionTiltCurve(<camera_id>)
[<mask_id>,<mask_id>,...]	getCameraMaskList(<camera_id>, <selected_only>)
<mask_id> 			createCameraMask(<camera_id>)
				deleteCameraMask(<camera_id>, <mask_id>)
0|1 				getCameraMasksEnabledFlag(<camera_id>)
				setCameraMasksEnabledFlag(<camera_id>, 0|1)
0|1 				getCameraMasksInvertedFlag(<camera_id>)
				setCameraMasksInvertedFlag(<camera_id>, 0|1)
[<keyframe>,<keyframe>,...] 	getCameraMaskKeyframeList(<camera_id>, <mask_id>)
				removeCameraMaskKeyframe(<camera_id>, <mask_id>, <keyframe>)
[<vector 2d>,<vector 2d>,...] 	getCameraMaskCVPositions(<camera_id>, <mask_id>, <keyframe>)
				setCameraMaskCVPositions(<camera_id>, <mask_id>, <keyframe>, [<vector 2d>,<vector 2d>,...])
[<vector 2d>,<vector 2d>,...] 	getCameraMaskCVTangents(<camera_id>, <mask_id>, <keyframe>)
				setCameraMaskCVTangents(<camera_id>, <mask_id>, <keyframe>, [<vector 2d>,<vector 2d>,...])
[0|1, 0|1, ...] 		getCameraMaskCVLinearFlags(<camera_id>, <mask_id>)
				setCameraMaskCVLinearFlags(<camera_id>, <mask_id>, [0|1, 0|1, ...])
[0|1, 0|1, ...]			getCameraMaskCVSelectionFlags(<camera_id>, <mask_id>)
				setCameraMaskCVSelectionFlags(<camera_id>, <mask_id>, [0|1, 0|1, ...])
0|1	 			getCameraMaskVisibleFlag(<camera_id>, <mask_id>, <keyframe>)
				setCameraMaskVisibleFlag(<camera_id>, <mask_id>, <keyframe>, 0|1)
<int>				getCameraPersistentID(<camera_id>)
<camera_id>			findCameraByPersistentID(<int>)
[<xam>,<xbm>,<yam>,<ybm>]	getCameraFOVMask(<camera_id>)
				setCameraFOVMask(<camera_id>, <xam>, <xbm>, <yam>, <ybm>)
0|1				getCameraImportEXRDisplayWindowFlag(<camera_id>)
				setCameraImportEXRDisplayWindowFlag(<camera_id>, 0|1)
0|1				getCameraImportSXRRightEyeFlag(<camera_id>)
				setCameraImportSXRRightEyeFlag(<camera_id>, 0|1)

0|1 				getCameraImageMaskEnabledFlag(<camera_id>)
				setCameraImageMaskEnabledFlag(<camera_id>, 0|1)
0|1 				getCameraImageMaskInvertedFlag(<camera_id>)
				setCameraImageMaskInvertedFlag(<camera_id>, 0|1)
<path>				getCameraImageMaskPath(<camera_id>)
				setCameraImageMaskPath(<camera_id>, <path>)
[<start>,<end>,<step>]		getCameraImageMaskSequenceAttr(<camera_id>)
				setCameraImageMaskSequenceAttr(<camera_id>, <start>, <end>, <step>)
<image_type>			getCameraImageMaskType(<camera_id>)
				setCameraImageMaskType(<camera_id>, <image_type>)

0|1 				getCameraMaskEnabledFlag(<camera_id>, <mask_id>)
				setCameraMaskEnabledFlag(<camera_id>, <mask_id>, 0|1)



##############
# points...

<point_id>			createPoint(<pgroup_id>)
				deletePoint(<pgroup_id>, <point_id>)
<point_id>			getFirstPoint(<pgroup_id>)
<point_id>			getLastPoint(<pgroup_id>)
<point_id>			getNextPoint(<pgroup_id>, <point_id>, <use_gui_order>)
<point_id>			getPrevPoint(<pgroup_id>, <point_id>, <use_gui_order>)
[<point_id>,<point_id>,...]	getPointList(<pgroup_id>, <selected_only>)
<number_of_points>		getNoPoints(<pgroup_id>)
<point_id>			getIndexPoint(<pgroup_id>, <index>)
<point_id>			findPointByName(<pgroup_id>, <name>)
<name>				getPointName(<pgroup_id>, <point_id>)
				setPointName(<pgroup_id>, <point_id>, <name>)
0|1				getPointSelectionFlag(<pgroup_id>, <point_id>)
				setPointSelectionFlag(<pgroup_id>, <point_id>, 0|1)
<vector 3d>			getPointSurveyPosition3D(<pgroup_id>, <point_id>)
				setPointSurveyPosition3D(<pgroup_id>, <point_id>, <vector 3d>)
<vector 3d>			getPointCalcPosition3D(<pgroup_id>, <point_id>)
				setPointCalcPosition3D(<pgroup_id>, <point_id>, <vector 3d>)
<vector 3d>			getPointMoCapSurveyPosition3D(<pgroup_id>, <point_id>, <camera_id>, <frame>)
				setPointMoCapSurveyPosition3D(<pgroup_id>, <point_id>, <camera_id>, <frame>, <vector 3d>)
<vector 3d>			getPointMoCapCalcPosition3D(<pgroup_id>, <point_id>, <camera_id>, <frame>)
				setPointMoCapCalcPosition3D(<pgroup_id>, <point_id>, <camera_id>, <frame>, <vector 3d>)
<survey mode>			getPointSurveyMode(<pgroup_id>, <point_id>)
				setPointSurveyMode(<pgroup_id>, <point_id>, <survey mode>)
<calc mode>			getPointCalcMode(<pgroup_id>, <point_id>)
				setPointCalcMode(<pgroup_id>, <point_id>, <calc mode>)
<double>			getPointWeight(<pgroup_id>, <point_id>)
				setPointWeight(<pgroup_id>, <point_id>, <double>)
<vector 2d>			getPointPosition2D(<pgroup_id>, <point_id>, <camera_id>, <frame>)
				setPointPosition2D(<pgroup_id>, <point_id>, <camera_id>, <frame>, <vector 2d>)
<tracking curve>		getPointPosition2DBlock(<pgroup_id>, <point_id>, <camera_id>, <start frame>, <end frame>)
				setPointPosition2DBlock(<pgroup_id>, <point_id>, <camera_id>, <start frame>, <tracking curve>)
0|1				isPointPos2DValid(<pgroup_id>, <point_id>, <camera_id>, <frame>)
				deletePointCurve2D(<pgroup_id>, <point_id>, <camera_id>)
0|1				isPointCalculated3D(<pgroup_id>, <point_id>)
				setPointCalculated3D(<pgroup_id>, <point_id>, 0|1)
<double>			getPointDeviation(<pgroup_id>, <point_id>, <camera_id>, <frame>)
				setPointDeviation(<pgroup_id>, <point_id>, <camera_id>, <frame>, <double>)
<color_index>			getPointColor2D(<pgroup_id>, <point_id>)
				setPointColor2D(<pgroup_id>, <point_id>, <color_index>)
<color_index>			getPointColor3D(<pgroup_id>, <point_id>)
				setPointColor3D(<pgroup_id>, <point_id>, <color_index>)
<vector 3d>			calcPointPosition3D(<pgroup_id>, <point_id>, <camera_id>)
<vector 2d>			calcPointBackProjection2D(<pgroup_id>, <point_id>, <camera_id>, <frame>, <with_distortion>)
<tracking_mode>			getPointTrackingMode(<pgroup_id>, <point_id>)
				setPointTrackingMode(<pgroup_id>, <point_id>, <tracking_mode>)
<tracking_direction>		getPointTrackingDirection(<pgroup_id>, <point_id>)
				setPointTrackingDirection(<pgroup_id>, <point_id>, <tracking_direction>)
				shiftPointPositions2D(<pgroup_id>, <point_id>, <camera_id>, <shift>)
				setPointTrackingBoxes2D(<pgroup_id>, <point_id>, <camera_id>, <frame>, <search>, <pattern>, <offset>, <rot>)
[<s>,<p>,<o>,<r>]		getPointTrackingBoxes2D(<pgroup_id>, <point_id>, <camera_id>, <frame>)
				setPointStatus2D(<pgroup_id>, <point_id>, <camera_id>, <frame>, "POINT_KEYFRAME"|"POINT_KEYFRAME_END"|"POINT_OBSOLETE"|"POINT_TRACKED"|"POINT_INTERPOLATED")
<point_status>			getPointStatus2D(<pgroup_id>, <point_id>, <camera_id>, <frame>)
				setPointTrackingTransform(<pgroup_id>, <point_id>, <camera_id>, <frame>, <forward_pass>, <matrix 3d>)
<matrix 3d>			getPointTrackingTransform(<pgroup_id>, <point_id>, <camera_id>, <frame>, <forward_pass>)
0|1				getPointAutoTrackingFlag(<pgroup_id>, <point_id>)
0|1				getPointInfiniteDistantFlag(<pgroup_id>, <point_id>)
				setPointInfiniteDistantFlag(<pgroup_id>, <point_id>, 0|1)
<set_id>			getPointSet(<pgroup_id>, <point_id>)
				setPointSet(<pgroup_id>, <point_id>, <set_id>)
0|1				getPointHideFlag(<pgroup_id>, <point_id>)
				setPointHideFlag(<pgroup_id>, <point_id>, 0|1)
0|1				getPointLockFlag(<pgroup_id>, <point_id>, <camera_id>)
				setPointLockFlag(<pgroup_id>, <point_id>, <camera_id>, 0|1)
0|1				getPointEnhancedTrackingFlag(<pgroup_id>, <point_id>)				# obsolete
				setPointEnhancedTrackingFlag(<pgroup_id>, <point_id>, 0|1)			# obsolete
0|1				getPointLuminanceChangesFlag(<pgroup_id>, <point_id>)
				setPointLuminanceChangesFlag(<group_id>, <point_id>, 0|1)
0|1				getPointRotatePatternFlag(<pgroup_id>, <point_id>)
				setPointRotatePatternFlag(<pgroup_id>, <point_id>, 0|1)
0|1				getPointScalePatternFlag(<pgroup_id>, <point_id>)
				setPointScalePatternFlag(<pgroup_id>, <point_id>, 0|1)
0|1				getPointCreateAutoKeyframesFlag(<pgroup_id>, <point_id>)
				setPointCreateAutoKeyframesFlag(<pgroup_id>, <point_id>, 0|1)
0|1				getPointStopLowQualityTrackingFlag(<pgroup_id>, <point_id>)
				setPointStopLowQualityTrackingFlag(<pgroup_id>, <point_id>, 0|1)
0|1				getPointSplineBoxesFlag(<pgroup_id>, <point_id>)
				setPointSplineBoxesFlag(<pgroup_id>, <point_id>, 0|1)
0|1				getPointValidOutsideFOVFlag(<pgroup_id>, <point_id>)				# obsolete
				setPointValidOutsideFOVFlag(<pgroup_id>, <point_id>, 0|1)			# obsolete
<point_valid_mode>		getPointValidMode(<pgroup_id>, <point_id>)
				setPointValidMode(<pgroup_id>, <point_id>, <point_valid_mode>)
<blur_mode>			getPointBlurring(<pgroup_id>, <point_id>)
				setPointBlurring(<pgroup_id>, <point_id>, <blur_mode>)
<double>			getPointAutoKeyframeSensitivity(<pgroup_id>, <point_id>)
				setPointAutoKeyframeSensitivity(<pgroup_id>, <point_id>, <double>)
<ref_pattern_mode>		getPointReferencePatternMode(<pgroup_id>, <point_id>)
				setPointReferencePatternMode(<pgroup_id>, <point_id>, <ref_pattern_mode>)
<frame>				getPointReferencePatternExplicitFrame(<pgroup_id>, <point_id>)
				setPointReferencePatternExplicitFrame(<pgroup_id>, <point_id>, <frame>)
[<red>, <green>, <blue>]	getPointRGBWeights(<pgroup_id>, <point_id>)
				setPointRGBWeights(<pgroup_id>, <point_id>, <red>, <green>, <blue>)
				splinePointPositions2D(<pgroup_id>, <point_id>, <camera_id>)
0|1				getPointTimelineHideFlag(<pgroup_id>, <point_id>, <camera_id>)
				setPointTimelineHideFlag(<pgroup_id>, <point_id>, <camera_id>, 0|1)
[<x_on>, <y_on>, <z_on>]	getPointSurveyXYZEnabledFlags(<pgroup_id>, <point_id>)
				setPointSurveyXYZEnabledFlags(<pgroup_id>, <point_id>, <survey_x_enabled>, <survey_y_enabled>, <survey_z_enabled>)
<double>			getPointApproxSurveyRange(<pgroup_id>, <point_id>)
				setPointApproxSurveyRange(<pgroup_id>, <point_id>, <double>)
0|1				getPointAutomaticWeightFlag(<pgroup_id>, <point_id>)				# obsolete
				setPointAutomaticWeightFlag(<pgroup_id>, <point_id>, 0|1)			# obsolete
0|1				getPointPositionWeightBlendingFlag(<pgroup_id>, <point_id>)
				setPointPositionWeightBlendingFlag(<pgroup_id>, <point_id>, 0|1)
[<horizontal>, <vertical>]	getPointPositionWeightBlending(<pgroup_id>, <point_id>)
				setPointPositionWeightBlending(<pgroup_id>, <point_id>, <horizontal>, <vertical>)
0|1				getPointTimelineWeightBlendingFlag(<pgroup_id>, <point_id>)
				setPointTimelineWeightBlendingFlag(<pgroup_id>, <point_id>, 0|1)
<# frames>			getPointTimelineWeightBlending(<pgroup_id>, <point_id>)
				setPointTimelineWeightBlending(<pgroup_id>, <point_id>, <# frames>)
<double>			getPointMocapZDepthFilter(<pgroup_id>, <point_id>)
				setPointMocapZDepthFilter(<pgroup_id>, <point_id>, <double>)
<point_3d_status>		getPointCalculated3DStatus(<pgroup_id>, <point_id>)
				setPointCalculated3DStatus(<pgroup_id>, <point_id>, <point_3d_status>)
0|1				getPointAllowTriangulateFlag(<pgroup_id>, <point_id>)
				setPointAllowTriangulateFlag(<pgroup_id>, <point_id>, 0|1)
<point_weighting_mode>		getPointWeightingMode(<pgroup_id>, <point_id>)
				setPointWeightingMode(<pgroup_id>, <point_id>, <point_weighting_mode>)
<curve_id>			getPointDynamicWeightingCurve(<pgroup_id>, <point_id>, <camera_id>)
<double>			getPointDeepTracking(<pgroup_id>, <point_id>)
				setPointDeepTracking(<pgroup_id>, <point_id>, <double>)
<double>			getPointWeightByFrame(<pgroup_id>, <point_id>, <camera_id>, <frame>)
<int>				getPointPersistentID(<pgroup_id>, <point_id>)
<point_id>			findPointByPersistentID(<pgroup_id>, <int>)
				calcPointDeviationCurve(<pgroup_id>, <point_id>, <camera_id>)
[<width_px>,<height_px>]	getPointMarkerSize(<pgroup_id>, <point_id>, <camera_id>, <frame>)

[<vector3d>, <vector3d>, ...]	getPointMoCapCalcPosition3DList(<pgroup_id>, <point_id>, <camera_id>)
[<vector3d>, <vector3d>, ...]	getPointMoCapSurveyPosition3DList(<pgroup_id>, <point_id>, <camera_id>)
[<status>, <status>, ...]	getPointStatus2DList(<pgroup_id>, <point_id>, <camera_id>)
[[s,p,o,r],[s,p,o,r], ...]	getPointTrackingBoxes2DList(<pgroup_id>, <point_id>, <camera_id>)
[<matrix 3d>, <matrix 3d>, ...]	getPointTrackingTransformList(<pgroup_id>, <point_id>, <camera_id>, <forward_pass>)

				setPointMoCapCalcPosition3DList(<pgroup_id>, <point_id>, <camera_id>, [<vector3d>, <vector3d>, ...])
				setPointMoCapSurveyPosition3DList(<pgroup_id>, <point_id>, <camera_id>, [<vector3d>, <vector3d>, ...])
				setPointStatus2DList(<pgroup_id>, <point_id>, <camera_id>, [<status>, <status>, ...])
				setPointTrackingBoxes2DList(<pgroup_id>, <point_id>, <camera_id>, [[s,p,o,r],[s,p,o,r], ...])
				setPointTrackingTransformList(<pgroup_id>, <point_id>, <camera_id>, <forward_pass>, [<matrix 3d>, <matrix 3d>, ...])




##############
# sets...

<set_id>			createSet(<pgroup_id>)
				deleteSet(<pgroup_id>, <set_id>)
[<set_id>,<set_id>,...]		getSetList(<pgroup_id>, <selected_only>)
<name>				getSetName(<pgroup_id>, <set_id>)
				setSetName(<pgroup_id>, <set_id>, <name>)
0|1				getSetSelectionFlag(<pgroup_id>, <set_id>)
				setSetSelectionFlag(<pgroup_id>, <set_id>, 0|1)
[<point_id>,<point_id>,...]	getSetPointList(<pgroup_id>, <set_id>)




##############
# lenses & lens distortion models...

<lens_id>			createLens()
				deleteLens(<lens_id>)
<lens_id>			getFirstLens()
<lens_id>			getNextLens(<lens_id>)
[<lens_id>,<lens_id>,...]	getLensList(<selected_only>)
<number_of_lenses>		getNoLenses()
<lens_id>			getIndexLens(<index>)
0|1				getLensSelectionFlag(<lens_id>)
				setLensSelectionFlag(<lens_id>, 0|1)
<name>				getLensName(<lens_id>)
				setLensName(<lens_id>, <name>)
<value>				getLensFBackWidth(<lens_id>)
				setLensFBackWidth(<lens_id>, <value>)
<value>				getLensFBackHeight(<lens_id>)
				setLensFBackHeight(<lens_id>, <value>)
<value>				getLensFocalLength(<lens_id>)
				setLensFocalLength(<lens_id>, <value>)
<value>				getLensFilmAspect(<lens_id>)
				setLensFilmAspect(<lens_id>, <value>)
<value>				getLensLensCenterX(<lens_id>)
				setLensLensCenterX(<lens_id>, <value>)
<value>				getLensLensCenterY(<lens_id>)
				setLensLensCenterY(<lens_id>, <value>)
<value>				getLensPixelAspect(<lens_id>)
				setLensPixelAspect(<lens_id>, <value>)
<value>				getLensHorizAngle(<lens_id>)
<value>				getLensVertiAngle(<lens_id>)
<value>				getLensFocus(<lens_id>)
				setLensFocus(<lens_id>, <value>)

<dyn_distortion_mode>		getLensDynamicDistortionMode(<lens_id>)
				setLensDynamicDistortionMode(<lens_id>, <dyn_distortion_mode>)

0|1				getLensDynamicDistortionFlag(<lens_id>)					# obsolete
				setLensDynamicDistortionFlag(<lens_id>, 0|1)				# obsolete

<value>				getLensDistortion(<lens_id>, <focal_length_or_focus>)			# obsolete
				setLensDistortion(<lens_id>, <focal_length_or_focus>, <value>)		# obsolete
<value>				getLensAnamorphSqueeze(<lens_id>, <focal_length_or_focus>)		# obsolete
				setLensAnamorphSqueeze(<lens_id>, <focal_length_or_focus>, <value>)	# obsolete
<value>				getLensCurvatureX(<lens_id>, <focal_length_or_focus>)			# obsolete
				setLensCurvatureX(<lens_id>, <focal_length_or_focus>, <value>)		# obsolete
<value>				getLensCurvatureY(<lens_id>, <focal_length_or_focus>)			# obsolete
				setLensCurvatureY(<lens_id>, <focal_length_or_focus>, <value>)		# obsolete
<value>				getLensQuarticDistortion(<lens_id>, <focal_length_or_focus>)		# obsolete
				setLensQuarticDistortion(<lens_id>, <focal_length_or_focus>, <value>)	# obsolete
<curve_id>			getLensDistortionCurve(<lens_id>)					# obsolete
<curve_id>			getLensAnamorphSqueezeCurve(<lens_id>)					# obsolete
<curve_id>			getLensCurvatureXCurve(<lens_id>)					# obsolete
<curve_id>			getLensCurvatureYCurve(<lens_id>)					# obsolete
<curve_id>			getLensQuarticDistortionCurve(<lens_id>)				# obsolete

[<ld model>,<ld model>,...]	getLensLDModelList()

<model>				getLensLDModel(<lens_id>)
				setLensLDModel(<lens_id>, <model>)
<double>			getLensLDAdjustableParameter(<lens_id>, <para_name>, <focal_length>, <focus_distance>)
				setLensLDAdjustableParameter(<lens_id>, <para_name>, <focal_length>, <focus_distance>, <double>)
<curve_id>			getLensLDAdjustableParameterCurve(<lens_id>, <para_name>)
<value>				getLensLDRegularParameter(<lens_id>, <para_name>)
				setLensLDRegularParameter(<lens_id>, <para_name>, <string>)

<number_of_parameters>		getLDModelNoParameters(<model>)
<para_name>			getLDModelParameterName(<model>, <index>)
<para_type>			getLDModelParameterType(<model>, <para_name>)
<value>				getLDModelParameterDefault(<model>, <para_name>)
[<a>, <b>]			getLDModelParameterRange(<model>, <para_name>)

<number_of_samples>		getLensNo2DLUTSamples(<lens_id>, <para_name>)
[<focal>,<focus>,<value>]	getLens2DLUTSample(<lens_id>, <para_name>, <index>)
				setLens2DLUTSample(<lens_id>, <para_name>, <index>, <focal_length>, <focus_distance>, <value>)
				addLens2DLUTSample(<lens_id>, <para_name>, <focal_length>, <focus_distance>, <value>)
				removeLens2DLUTSample(<lens_id>, <para_name>, <index>)
				removeLensAll2DLUTSamples(<lens_id>, <para_name>)
<value>				evaluateLens2DLUT(<lens_id>, <para_name>, <focal_length>, <focus_distance>)

				makeLensConsistent(<lens_id>)

<int>				getLensPersistentID(<lens_id>)
<lens_id>			findLensByPersistentID(<int>)

0|1				calcDistortionFromFootage(<ref_camera_id>, <speedup>, <multires_grid>, <calc_focal_length>, <calc_lco_x>, <calc_lco_y>, <calc_pixel_aspect>)





##############
# curves...

<curve_id>			createCurve()
				deleteCurve(<curve_id>)
<key_id>			createCurveKey(<curve_id>, <vector 2d>)
				deleteCurveKey(<curve_id>, <key_id>)
				deleteAllCurveKeys(<curve_id>)
<double>			evaluateCurve(<curve_id>, <x>)
<key_id>			getFirstCurveKey(<curve_id>)
<key_id>			getNextCurveKey(<curve_id>, <key_id>)
<key_id>			getPrevCurveKey(<curve_id>, <key_id>)
[<key_id>,<key_id>,...]		getCurveKeyList(<curve_id>, <selected_only>)
<number_of_curve_keys>		getNoCurveKeys(<curve_id>)
0|1				getCurveKeySelectionFlag(<curve_id>, <key_id>)
				setCurveKeySelectionFlag(<curve_id>, <key_id>, 0|1)
<vector 2d>			getCurveKeyPosition(<curve_id>, <key_id>)
				setCurveKeyPosition(<curve_id>, <key_id>, <vector 2d>)
<vector 2d>			getCurveKeyTangent1(<curve_id>, <key_id>)
				setCurveKeyTangent1(<curve_id>, <key_id>, <vector 2d>)
<vector 2d>			getCurveKeyTangent2(<curve_id>, <key_id>)
				setCurveKeyTangent2(<curve_id>, <key_id>, <vector 2d>)
"LINEAR"|"BROKEN"|"SMOOTH"	getCurveKeyMode(<curve_id>, <key_id>)
				setCurveKeyMode(<curve_id>, <key_id>, "LINEAR"|"BROKEN"|"SMOOTH")
0|1				getCurveKeyFixedXFlag(<curve_id>, <key_id>)
				setCurveKeyFixedXFlag(<curve_id>, <key_id>, 0|1)

<int>				getCurveKeyPersistentID(<curve_id>, <key_id>)
<key_id>			findCurveKeyByPersistentID(<curve_id>, <int>)




###########
# geo...

<geo_id>			createGeo(<pgroup_id>)
				deleteGeo(<pgroup_id>, <geo_id>)
<geo_id>			getFirstGeo(<pgroup_id>)
<geo_id>			getNextGeo(<pgroup_id>, <geo_id>)
[<geo_id>,<geo_id>,...]		getGeoList(<pgroup_id>, <selected_only>)
0|1				getGeoSelectionFlag(<pgroup_id>, <geo_id>)
				setGeoSelectionFlag(<pgroup_id>, <geo_id>, 0|1)
<name>				getGeoName(<pgroup_id>, <geo_id>)
				setGeoName(<pgroup_id>, <geo_id>, <name>)
[<vector 3d>,<vector 3d>,...]	getGeoPointList(<pgroup_id>, <geo_id>, <camera_id>, <frame>)
[<point_id>,<point_id>,...]	getGeoPointPointList(<pgroup_id>, <geo_id>)
				addGeoPoint(<pgroup_id>, <geo_id>, <point_id>, <offset 3d>)
[<r>, <g>, <b>]			getGeoColor(<pgroup_id>, <geo_id>)
				setGeoColor(<pgroup_id>, <geo_id>, <r>, <g>, <b>)
0|1				getGeoVisibleFlag(<pgroup_id>, <geo_id>)
				setGeoVisibleFlag(<pgroup_id>, <geo_id>, 0|1)

<int>				getGeoPersistentID(<pgroup_id>, <geo_id>)
<geo_id>			findGeoByPersistentID(<pgroup_id>, <int>)



################
# 3d models...



<model_id>			create3DModel(<pgroup_id>, <initial_number_of_vertices>)
				delete3DModel(<pgroup_id>, <model_id>)
0|1				importOBJ3DModel(<pgroup_id>, <model_id>, <path_to_obj>)
<model_id>			getFirst3DModel(<pgroup_id>)
<model_id>			getNext3DModel(<pgroup_id>, <model_id>)
[<model_id>,<model_id>,...]	get3DModelList(<pgroup_id>, <selected_only>)
0|1				get3DModelSelectionFlag(<pgroup_id>, <model_id>)
				set3DModelSelectionFlag(<pgroup_id>, <model_id>, 0|1)
<name>				get3DModelName(<pgroup_id>, <model_id>)
				set3DModelName(<pgroup_id>, <model_id>, <name>)
0|1				get3DModelSurveyFlag(<pgroup_id>, <model_id>)
				set3DModelSurveyFlag(<pgroup_id>, <model_id>, 0|1)
0|1				get3DModelReferenceFlag(<pgroup_id>, <model_id>)
				set3DModelReferenceFlag(<pgroup_id>, <model_id>, 0|1)
<path_to_obj>			get3DModelFilepath(<pgroup_id>, <model_id>)
				set3DModelFilepath(<pgroup_id>, <model_id>, <path_to_obj>)
<vector 3d>			get3DModelPosition3D(<pgroup_id>, <model_id>, <camera_id>, <frame>)
				set3DModelPosition3D(<pgroup_id>, <model_id>, <vector 3d>)
<matrix 3d>			get3DModelRotationScale3D(<pgroup_id>, <model_id>, <camera_id>, <frame>)
				set3DModelRotationScale3D(<pgroup_id>, <model_id>, <matrix 3d>)
<number_of_vertices>		get3DModelNoVertices(<pgroup_id>, <model_id>)
<vector 3d>			get3DModelVertex(<pgroup_id>, <model_id>, <vertex_index>, <camera_id>, <frame>)
				set3DModelVertex(<pgroup_id>, <model_id>, <vertex_index>, <vector 3d>)
<number_of_lines>		get3DModelNoLines(<pgroup_id>, <model_id>)
[<index0>,<index1>,...]		get3DModelLineVertexIndices(<pgroup_id>, <model_id>, <line_index>)
<number_of_faces>		get3DModelNoFaces(<pgroup_id>, <model_id>)
[<index0>,<index1>,...]		get3DModelFaceVertexIndices(<pgroup_id>, <model_id>, <face_index>)
				removeAll3DModelGeometryData(<pgroup_id>, <model_id>)
<vertex_index>			add3DModelVertex(<pgroup_id>, <model_id>, <vector 3d>)
				add3DModelLine(<pgroup_id>, <model_id>, [<index0>,<index1>,...])
				add3DModelFace(<pgroup_id>, <model_id>, [<index0>,<index1>,...])
				remove3DModelLine(<pgroup_id>, <model_id>, <line_index>)
				remove3DModelFace(<pgroup_id>, <model_id>, <face_index>)
[<u>, <v>]			get3DModelFaceUVCoord(<pgroup_id>, <model_id>, <face_index>, <vertex_index>)
				set3DModelFaceUVCoord(<pgroup_id>, <model_id>, <face_index>, <vertex_index>, <u>, <v>)
				set3DModelSnappingPoint(<pgroup_id>, <model_id>, <point_id>)
<point_id>			get3DModelSnappingPoint(<pgroup_id>, <model_id>)
0|1				get3DModelVisibleFlag(<pgroup_id>, <model_id>)
				set3DModelVisibleFlag(<pgroup_id>, <model_id>, 0|1)
[<r>,<g>,<b>,<a>]		get3DModelColor(<pgroup_id>, <model_id>)
				set3DModelColor(<pgroup_id>, <model_id>, <r>, <g>, <b>, <a>)
[<points>,<lines>,<polygons>]	get3DModelRenderingFlags(<pgroup_id>, <model_id>)
				set3DModelRenderingFlags(<pgroup_id>, <model_id>, <show_points>, <show_lines>, <show_polygons>)
0|1				get3DModelHiddenLinesFlag(<pgroup_id>, <model_id>)
				set3DModelHiddenLinesFlag(<pgroup_id>, <model_id>, 0|1)
<bf_culling_mode>		get3DModelBackfaceCullingMode(<pgroup_id>, <model_id>)
				set3DModelBackfaceCullingMode(<pgroup_id>, <model_id>, <bf_culling_mode>)
[<r>,<g>,<b>,<a>]		get3DModelVertexColor(<pgroup_id>, <model_id>, <vertex_index>)
				set3DModelVertexColor(<pgroup_id>, <model_id>, <vertex_index>, <r>, <g>, <b>, <a>)
0|1				get3DModelPerVertexColorsFlag(<pgroup_id>, <model_id>)
				set3DModelPerVertexColorsFlag(<pgroup_id>, <model_id>, 0|1)
<proxy_geometry>		get3DModelProxyGeometry(<pgroup_id>, <model_id>)
				set3DModelProxyGeometry(<pgroup_id>, <model_id>, <proxy_geometry>)
0|1				get3DModelMapFootageFlag(<pgroup_id>, <model_id>)				# obsolete
				set3DModelMapFootageFlag(<pgroup_id>, <model_id>, 0|1)				# obsolete
0|1				get3DModelPointLinksFlag(<pgroup_id>, <model_id>)
				set3DModelPointLinksFlag(<pgroup_id>, <model_id>, 0|1)
<point_id>			get3DModelPointLink(<pgroup_id>, <model_id>, <vertex_index>)
				set3DModelPointLink(<pgroup_id>, <model_id>, <vertex_index>, <point_id>)
<texmap_mode>			get3DModelTextureMapMode(<pgroup_id>, <model_id>)
				set3DModelTextureMapMode(<pgroup_id>, <model_id>, <texmap_mode>)
<filename>			get3DModelUVTextureMap(<pgroup_id>, <model_id>)
				set3DModelUVTextureMap(<pgroup_id>, <model_id>, <filename>)
0|1				get3DModelPerformanceRenderingFlag(<pgroup_id>, <model_id>)
				set3DModelPerformanceRenderingFlag(<pgroup_id>, <model_id>, 0|1)
<double>			get3DModelPerformanceRenderingQuality(<pgroup_id>, <model_id>)
				set3DModelPerformanceRenderingQuality(<pgroup_id>, <model_id>, <double>)
<success>			align3DModelto3DModel(<pgroup_id>, <model_id>, <model_id>, <allow_scale>, <allow_translate>, <allow_rotate>, <identical_models>, <enhanced_calculation>, <reference_points>)

<int>				get3DModelPersistentID(<pgroup_id>, <model_id>)
<model_id>			find3DModelByPersistentID(<pgroup_id>, <int>)

				set3DModelAimPoint(<pgroup_id>, <model_id>, <point_id>, "AIM_NONE"|"AIM_X"|"AIM_Y"|"AIM_Z")
[<point_id>, <aim_mode>]	get3DModelAimPoint(<pgroup_id>, <model_id>)

0|1				decimate3DModel(<pgroup_id>, <model_id>, <proxy>, <camera_id>, <frame>, <decimation>, <model_id>, <proxy>)


[<vector 3d>, <vector 3d>,...]	get3DModelVertexList(<pgroup_id>, <model_id>, <camera_id>, <frame>)
[<rgba>, <rgba>, ...]		get3DModelVertexColorList(<pgroup_id>, <model_id>)
[<point_id>, <point_id>, ...]	get3DModelPointLinkList(<pgroup_id>, <model_id>)
[[<i0>,<i1>,<i2>,...],[...]]	get3DModelFaceList(<pgroup_id>, <model_id>)
[[<i0>,<i1>,<i2>,...],[...]]	get3DModelLineList(<pgroup_id>, <model_id>)
[[<vec2d>, <vec2d>,...],[...]]	get3DModelFaceUVCoordsList(<pgroup_id>, <model_id>)

				set3DModelVertexList(<pgroup_id>, <model_id>, [<vector 3d>, <vector 3d>,...])
				set3DModelVertexColorList(<pgroup_id>, <model_id>, [<rgba>, <rgba>,...])
				set3DModelPointLinkList(<pgroup_id>, <model_id>, [<point_id>, <point_id>, ...])
				set3DModelFaceList(<pgroup_id>, <model_id>, [[<i0>,<i1>,<i2>,...],[...]])
				set3DModelLineList(<pgroup_id>, <model_id>, [[<i0>,<i1>,<i2>,...],[...]])
				set3DModelFaceUVCoordsList(<pgroup_id>, <model_id>, [[<vec2d>, <vec2d>,...],[...]])
