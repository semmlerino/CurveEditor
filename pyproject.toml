[project]
name = "curveeditor"
version = "1.0.0"
description = "Python/PySide6 application for editing animation curves with multi-curve tracking"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # Core GUI Framework
    "PySide6>=6.4.0,<7.0.0",

    # Type extensions
    "typing-extensions>=4.0.0",

    # Image Processing
    "Pillow>=10.0.0",
    "numpy>=1.24.0",
    "imageio>=2.31.0",

    # EXR Support
    "OpenEXR>=3.0.0",
]

[dependency-groups]
dev = [
    # Testing
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-qt>=4.0.0",
    "pytest-timeout>=2.0.0",
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.0.0",
    "psutil>=5.0.0", # Performance monitoring for tests
    # Code Quality
    "ruff>=0.12.0",
    "basedpyright>=1.0.0",
    # Pre-commit
    "pre-commit>=3.0.0",
    # Type stubs
    "PySide6-stubs>=6.7.0",
    "pytest-pystack>=1.0.2",
    "pytest-xdist>=3.8.0",
]

[tool.uv]
package = false  # CurveEditor is an application, not a distributable package

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
# Exclude archive and obsolete directories from linting
extend-exclude = [
    "docs/ObsoleteArchive/",
    "docs/archive_2025_01_28/",
    "**/archive/",
    "**/obsolete/",
    "**/Archive/",
    "**/Obsolete/",
    "venv/",
    "node_modules/",
    "**/__pycache__/",
    "**/.pytest_cache/",
    "**/.mypy_cache/",
    "*.txt",
    "*.md",
    "*.bat",
    "*.sh",
    "footage/",
]

# Set the maximum line length
line-length = 120

# Python version target
target-version = "py311"

[tool.ruff.lint]
# Enable common linting rules
select = [
    "E",     # pycodestyle errors
    "F",     # pyflakes
    "W",     # pycodestyle warnings
    "I",     # isort
    "N",     # pep8-naming
    "UP",    # pyupgrade
]

# Ignore specific rules
ignore = [
    "E501",  # line too long (handled by formatter)
    "N802",  # function name should be lowercase (Qt override methods)
    "N815",  # variable in class scope should not be mixedCase (Qt properties)
]

[tool.ruff.lint.per-file-ignores]
# Qt requires specific method names for overrides
"**/*.py" = ["N802", "N815"]  # Allow Qt method names and properties

[tool.pytest.ini_options]
# Test discovery patterns
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

# Test output options
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "-p", "no:cacheprovider",
]

# Timeout for tests (in seconds)
timeout = 60

# Markers
markers = [
    "qt_required: Tests that require Qt/QApplication to be initialized",
    "skip_qt_cleanup: Tests that should skip automatic Qt cleanup",
    "slow: Tests that take a long time to run",
    "integration: Integration tests",
    "unit: Unit tests",
    "performance: Performance and benchmark tests",
    "benchmark: Specific benchmark tests for performance comparison",
]

# Qt specific settings
qt_api = "pyside6"

# Test paths
testpaths = ["tests"]

# Minimum Python version
minversion = "3.8"

[tool.basedpyright]
# Use the configuration from basedpyrightconfig.json
# This section exists for IDE integration but the JSON file takes precedence
